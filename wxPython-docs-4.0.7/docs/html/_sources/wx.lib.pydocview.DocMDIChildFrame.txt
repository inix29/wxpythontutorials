.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2018 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.pydocview

.. highlight:: python



.. _wx.lib.pydocview.DocMDIChildFrame:

==========================================================================================================================================
|phoenix_title|  **wx.lib.pydocview.DocMDIChildFrame**
==========================================================================================================================================

The wxDocMDIChildFrame class provides a default frame for displaying
documents on separate windows. This class can only be used for MDI child
frames.

The class is part of the document/view framework supported by wxWindows,
and cooperates with the wxView, wxDocument, wxDocManager and wxDocTemplate
classes.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>DocMDIChildFrame</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.pydocview.DocMDIChildFrame_inheritance.png" alt="Inheritance diagram of DocMDIChildFrame" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.pydocview.DocMDIChildFrame.html" title="The wxDocMDIChildFrame class provides a default frame for displaying" alt="" coords="5,624,273,653"/> <area shape="rect" id="node2" href="wx.MDIChildFrame.html" title="An MDI child frame is a frame that can only exist inside a wx.MDIClientWindow, which is itself a child of wx.MDIParentFrame." alt="" coords="66,547,213,576"/> <area shape="rect" id="node3" href="wx.Frame.html" title="A frame is a window whose size and position can (usually) be changed by the user." alt="" coords="95,469,183,499"/> <area shape="rect" id="node4" href="wx.TopLevelWindow.html" title="wx.TopLevelWindow  is a common base class for wx.Dialog  and wx.Frame." alt="" coords="60,392,219,421"/> <area shape="rect" id="node5" href="wx.NonOwnedWindow.html" title="Common base class for all non-child windows." alt="" coords="54,315,225,344"/> <area shape="rect" id="node6" href="wx.Window.html" title="wx.Window  is the base class for all windows and represents any visible object on screen." alt="" coords="91,237,188,267"/> <area shape="rect" id="node7" href="wx.WindowBase.html" title="wx.WindowBase" alt="" coords="74,160,205,189"/> <area shape="rect" id="node8" href="wx.EvtHandler.html" title="A class that can handle events from the windowing system." alt="" coords="80,83,199,112"/> <area shape="rect" id="node9" href="wx.Object.html" title="This is the root class of many of the wxWidgets classes." alt="" coords="34,5,122,35"/> <area shape="rect" id="node10" href="wx.Trackable.html" title="Add-on base class for a trackable object." alt="" coords="147,5,257,35"/> </map> 
   </p>
   </div>

|


|super_classes| Known Superclasses
==================================

:class:`wx.MDIChildFrame`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.pydocview.DocMDIChildFrame.__init__`                              Constructor.  Note that the event table must be rebuilt for the
:meth:`~wx.lib.pydocview.DocMDIChildFrame.Activate`                              Activates the current view.
:meth:`~wx.lib.pydocview.DocMDIChildFrame.GetDocument`                           Returns the document associated with this frame.
:meth:`~wx.lib.pydocview.DocMDIChildFrame.GetView`                               Returns the view associated with this frame.
:meth:`~wx.lib.pydocview.DocMDIChildFrame.OnActivate`                            Sets the currently active view to be the frame's view. You may need to
:meth:`~wx.lib.pydocview.DocMDIChildFrame.OnCloseWindow`                         Closes and deletes the current view and document.
:meth:`~wx.lib.pydocview.DocMDIChildFrame.OnTitleIsModified`                     Add/remove to the frame's title an indication that the document is dirty.
:meth:`~wx.lib.pydocview.DocMDIChildFrame.ProcessEvent`                          Processes an event, searching event tables and calling zero or more
:meth:`~wx.lib.pydocview.DocMDIChildFrame.SetDocument`                           Sets the document for this frame.
:meth:`~wx.lib.pydocview.DocMDIChildFrame.SetView`                               Sets the view for this frame.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: DocMDIChildFrame(wx.MDIChildFrame)

   The wxDocMDIChildFrame class provides a default frame for displaying
   documents on separate windows. This class can only be used for MDI child
   frames.
   
   The class is part of the document/view framework supported by wxWindows,
   and cooperates with the wxView, wxDocument, wxDocManager and wxDocTemplate
   classes.

   .. method:: __init__(self, doc, view, frame, id, title, pos=wx.DefaultPosition, size=wx.DefaultSize, style=wx.DEFAULT_FRAME_STYLE, name="frame")

      Constructor.  Note that the event table must be rebuilt for the
      frame since the EvtHandler is not virtual.


   .. method:: Activate(self)

      Activates the current view.


   .. method:: GetDocument(self)

      Returns the document associated with this frame.


   .. method:: GetView(self)

      Returns the view associated with this frame.


   .. method:: OnActivate(self, event)

      Sets the currently active view to be the frame's view. You may need to
      override (but still call) this function in order to set the keyboard
      focus for your subwindow.


   .. method:: OnCloseWindow(self, event)

      Closes and deletes the current view and document.


   .. method:: OnTitleIsModified(self)

      Add/remove to the frame's title an indication that the document is dirty.
      If the document is dirty, an '*' is appended to the title


   .. method:: ProcessEvent(event)

      Processes an event, searching event tables and calling zero or more
      suitable event handler function(s).  Note that the ProcessEvent
      method is called from the wxPython docview framework directly since
      wxPython does not have a virtual ProcessEvent function.


   .. method:: SetDocument(self, document)

      Sets the document for this frame.


   .. method:: SetView(self, view)

      Sets the view for this frame.


