.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2018 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.richtext.RichTextStyleListBox:

==========================================================================================================================================
|phoenix_title|  **wx.richtext.RichTextStyleListBox**
==========================================================================================================================================

This is a listbox that can display the styles in a :ref:`wx.richtext.RichTextStyleSheet`, and apply the selection to an associated :ref:`wx.richtext.RichTextCtrl`.          

See  ``samples/richtext``   for an example of how to use it. 







         



.. seealso:: :ref:`wx.richtext.RichTextStyleComboCtrl`, :ref:`RichTextCtrl Overview <richtextctrl overview>`    







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>RichTextStyleListBox</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.richtext.RichTextStyleListBox_inheritance.png" alt="Inheritance diagram of RichTextStyleListBox" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.richtext.RichTextStyleListBox.html" title="This is a listbox that can display the styles in a wx.richtext.RichTextStyleSheet, and apply the selection to an associated wx.richtext.RichTextCtrl." alt="" coords="71,547,313,576"/> <area shape="rect" id="node2" href="wx.html.HtmlListBox.html" title="wx.html.HtmlListBox  is an implementation of wx.VListBox  which shows HTML content in the listbox rows." alt="" coords="112,469,272,499"/> <area shape="rect" id="node3" href="wx.VListBox.html" title="wx.VListBox  is a ListBox-like control with the following two main differences from a regular wx.ListBox: it can have an arbitrarily huge number of items because it doesn't store them itself but uses the wx.VListBox.OnDrawItem  callback to draw them (so it is a virtual listbox) and its items can have variable height as determined by wx.VListBox.OnMeasureItem  (so it is also a listbox with the lines of variable height)." alt="" coords="141,392,243,421"/> <area shape="rect" id="node4" href="wx.VScrolledWindow.html" title="In the name of this class, 'V' may stand for 'variable' because it can be used for scrolling rows of variable heights; 'virtual', because it is not necessary to know the heights of all rows in advance" alt="" coords="112,315,272,344"/> <area shape="rect" id="node5" href="wx.Panel.html" title="A panel is a window on which controls are placed." alt="" coords="79,237,161,267"/> <area shape="rect" id="node6" href="wx.VarVScrollHelper.html" title="This class provides functions wrapping the wx.VarScrollHelperBase  class, targeted for vertical-specific scrolling." alt="" coords="191,237,348,267"/> <area shape="rect" id="node7" href="wx.Window.html" title="wx.Window  is the base class for all windows and represents any visible object on screen." alt="" coords="62,160,159,189"/> <area shape="rect" id="node8" href="wx.EvtHandler.html" title="A class that can handle events from the windowing system." alt="" coords="51,83,170,112"/> <area shape="rect" id="node9" href="wx.Object.html" title="This is the root class of many of the wxWidgets classes." alt="" coords="5,5,93,35"/> <area shape="rect" id="node10" href="wx.Trackable.html" title="Add-on base class for a trackable object." alt="" coords="118,5,229,35"/> <area shape="rect" id="node11" href="wx.VarScrollHelperBase.html" title="This class provides all common base functionality for scroll calculations shared among all variable scrolled window implementations as well as automatic scrollbar functionality, saved scroll positions, controlling target windows to be scrolled, as well as defining all required virtual functions that need to be implemented for any orientation specific work." alt="" coords="184,160,365,189"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.richtext.RichTextStyleListBox.__init__`                               Constructor.
:meth:`~wx.richtext.RichTextStyleListBox.ApplyStyle`                             Applies the `ith`  style to the associated rich text control.
:meth:`~wx.richtext.RichTextStyleListBox.ConvertTenthsMMToPixels`                Converts units in tenths of a millimetre to device units.
:meth:`~wx.richtext.RichTextStyleListBox.Create`                                 Creates the window.
:meth:`~wx.richtext.RichTextStyleListBox.CreateHTML`                             Creates a suitable HTML fragment for a definition.
:meth:`~wx.richtext.RichTextStyleListBox.GetApplyOnSelection`                    If the return value is ``True``, clicking on a style name in the list will immediately apply the style to the associated rich text control.
:meth:`~wx.richtext.RichTextStyleListBox.GetClassDefaultAttributes`              
:meth:`~wx.richtext.RichTextStyleListBox.GetRichTextCtrl`                        Returns the :ref:`wx.richtext.RichTextCtrl`  associated with this listbox.
:meth:`~wx.richtext.RichTextStyleListBox.GetStyle`                               Gets a style for a listbox index.
:meth:`~wx.richtext.RichTextStyleListBox.GetStyleSheet`                          Returns the style sheet associated with this listbox.
:meth:`~wx.richtext.RichTextStyleListBox.GetStyleType`                           Returns the type of style to show in the list box.
:meth:`~wx.richtext.RichTextStyleListBox.OnGetItem`                              Returns the HTML for this item.
:meth:`~wx.richtext.RichTextStyleListBox.OnLeftDown`                             Implements left click behaviour, applying the clicked style to the :ref:`wx.richtext.RichTextCtrl`.
:meth:`~wx.richtext.RichTextStyleListBox.SetApplyOnSelection`                    If `applyOnSelection`  is ``True``, clicking on a style name in the list will immediately apply the style to the associated rich text control.
:meth:`~wx.richtext.RichTextStyleListBox.SetRichTextCtrl`                        Associates the listbox with a :ref:`wx.richtext.RichTextCtrl`.
:meth:`~wx.richtext.RichTextStyleListBox.SetStyleSheet`                          Associates the control with a style sheet.
:meth:`~wx.richtext.RichTextStyleListBox.SetStyleType`                           Sets the style type to display.
:meth:`~wx.richtext.RichTextStyleListBox.UpdateStyles`                           Updates the list from the associated style sheet.
================================================================================ ================================================================================


|


|property_summary| Properties Summary
=====================================

================================================================================ ================================================================================
:attr:`~wx.richtext.RichTextStyleListBox.ApplyOnSelection`                       See :meth:`~wx.richtext.RichTextStyleListBox.GetApplyOnSelection` and :meth:`~wx.richtext.RichTextStyleListBox.SetApplyOnSelection`
:attr:`~wx.richtext.RichTextStyleListBox.RichTextCtrl`                           See :meth:`~wx.richtext.RichTextStyleListBox.GetRichTextCtrl` and :meth:`~wx.richtext.RichTextStyleListBox.SetRichTextCtrl`
:attr:`~wx.richtext.RichTextStyleListBox.StyleSheet`                             See :meth:`~wx.richtext.RichTextStyleListBox.GetStyleSheet` and :meth:`~wx.richtext.RichTextStyleListBox.SetStyleSheet`
:attr:`~wx.richtext.RichTextStyleListBox.StyleType`                              See :meth:`~wx.richtext.RichTextStyleListBox.GetStyleType` and :meth:`~wx.richtext.RichTextStyleListBox.SetStyleType`
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.richtext.RichTextStyleListBox(HtmlListBox)

   **Possible constructors**::

       RichTextStyleListBox(parent, id=ID_ANY, pos=DefaultPosition,
                            size=DefaultSize, style=0)
       
       RichTextStyleListBox()
       
   
   This is a listbox that can display the styles in a
   RichTextStyleSheet, and apply the selection to an associated
   RichTextCtrl.



   .. method:: __init__(self, *args, **kw)



      |overload| Overloaded Implementations:

      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self, parent, id=ID_ANY, pos=DefaultPosition, size=DefaultSize, style=0)`
      
      Constructor.                  
      
      
      :param `parent`: 
      :type `parent`: wx.Window
      :param `id`: 
      :type `id`: wx.WindowID
      :param `pos`: 
      :type `pos`: wx.Point
      :param `size`: 
      :type `size`: wx.Size
      :param `style`: 
      :type `style`: long
      
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self)`
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`






   .. method:: ApplyStyle(self, i)

      Applies the `ith`  style to the associated rich text control.                  


      :param `i`: 
      :type `i`: int







   .. method:: ConvertTenthsMMToPixels(self, dc, units)

      Converts units in tenths of a millimetre to device units.                  


      :param `dc`: 
      :type `dc`: wx.DC
      :param `units`: 
      :type `units`: int




      :rtype: `int`








   .. method:: Create(self, parent, id=ID_ANY, pos=DefaultPosition, size=DefaultSize, style=0)

      Creates the window.                  


      :param `parent`: 
      :type `parent`: wx.Window
      :param `id`: 
      :type `id`: wx.WindowID
      :param `pos`: 
      :type `pos`: wx.Point
      :param `size`: 
      :type `size`: wx.Size
      :param `style`: 
      :type `style`: long




      :rtype: `bool`








   .. method:: CreateHTML(self, styleDef)

      Creates a suitable HTML fragment for a definition.                  


      :param `styleDef`: 
      :type `styleDef`: wx.richtext.RichTextStyleDefinition




      :rtype: `string`








   .. method:: GetApplyOnSelection(self)

      If the return value is ``True``, clicking on a style name in the list will immediately apply the style to the associated rich text control.                  

      :rtype: `bool`








   .. staticmethod:: GetClassDefaultAttributes(variant=WINDOW_VARIANT_NORMAL)




      :param `variant`: 
      :type `variant`: wx.WindowVariant




      :rtype: `VisualAttributes`     








   .. method:: GetRichTextCtrl(self)

      Returns the :ref:`wx.richtext.RichTextCtrl`  associated with this listbox.                  

      :rtype: :ref:`wx.richtext.RichTextCtrl`








   .. method:: GetStyle(self, i)

      Gets a style for a listbox index.                  


      :param `i`: 
      :type `i`: int




      :rtype: :ref:`wx.richtext.RichTextStyleDefinition`








   .. method:: GetStyleSheet(self)

      Returns the style sheet associated with this listbox.                  

      :rtype: :ref:`wx.richtext.RichTextStyleSheet`








   .. method:: GetStyleType(self)

      Returns the type of style to show in the list box.                  

      :rtype: `wx.richtext.RichTextStyleListBox.wxRichTextStyleType`     








   .. method:: OnGetItem(self, n)

      Returns the HTML for this item.                  


      :param `n`: 
      :type `n`: int




      :rtype: `string`








   .. method:: OnLeftDown(self, event)

      Implements left click behaviour, applying the clicked style to the :ref:`wx.richtext.RichTextCtrl`.                  


      :param `event`: 
      :type `event`: wx.MouseEvent







   .. method:: SetApplyOnSelection(self, applyOnSelection)

      If `applyOnSelection`  is ``True``, clicking on a style name in the list will immediately apply the style to the associated rich text control.                  


      :param `applyOnSelection`: 
      :type `applyOnSelection`: bool







   .. method:: SetRichTextCtrl(self, ctrl)

      Associates the listbox with a :ref:`wx.richtext.RichTextCtrl`.                  


      :param `ctrl`: 
      :type `ctrl`: wx.richtext.RichTextCtrl







   .. method:: SetStyleSheet(self, styleSheet)

      Associates the control with a style sheet.                  


      :param `styleSheet`: 
      :type `styleSheet`: wx.richtext.RichTextStyleSheet







   .. method:: SetStyleType(self, styleType)

      Sets the style type to display.                  

      One of

      - :meth:`RichTextStyleListBox.__init__` , 
      - :meth:`RichTextStyleListBox.__init__` , 
      - :meth:`RichTextStyleListBox.__init__`  
      - :meth:`RichTextStyleListBox.__init__` .  


                 


      :param `styleType`: 
      :type `styleType`: RichTextStyleListBox.wxRichTextStyleType







   .. method:: UpdateStyles(self)

      Updates the list from the associated style sheet.                   





   .. attribute:: ApplyOnSelection

      See :meth:`~wx.richtext.RichTextStyleListBox.GetApplyOnSelection` and :meth:`~wx.richtext.RichTextStyleListBox.SetApplyOnSelection`


   .. attribute:: RichTextCtrl

      See :meth:`~wx.richtext.RichTextStyleListBox.GetRichTextCtrl` and :meth:`~wx.richtext.RichTextStyleListBox.SetRichTextCtrl`


   .. attribute:: StyleSheet

      See :meth:`~wx.richtext.RichTextStyleListBox.GetStyleSheet` and :meth:`~wx.richtext.RichTextStyleListBox.SetStyleSheet`


   .. attribute:: StyleType

      See :meth:`~wx.richtext.RichTextStyleListBox.GetStyleType` and :meth:`~wx.richtext.RichTextStyleListBox.SetStyleType`


.. toctree::
   :maxdepth: 1
   :hidden:

   wx.richtext.RichTextStyleListBox.RichTextStyleType.enumeration
