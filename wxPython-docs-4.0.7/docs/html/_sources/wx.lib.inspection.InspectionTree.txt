.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2018 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.inspection

.. highlight:: python



.. _wx.lib.inspection.InspectionTree:

==========================================================================================================================================
|phoenix_title|  **wx.lib.inspection.InspectionTree**
==========================================================================================================================================

All of the widgets in the app, and optionally their sizers, are
loaded into this tree.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>InspectionTree</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.inspection.InspectionTree_inheritance.png" alt="Inheritance diagram of InspectionTree" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.inspection.InspectionTree.html" title="All of the widgets in the app, and optionally their sizers, are" alt="" coords="5,469,243,499"/> <area shape="rect" id="node2" href="wx.TreeCtrl.html" title="A tree control presents information as a hierarchy, with items that may be expanded to show further items." alt="" coords="75,392,173,421"/> <area shape="rect" id="node3" href="wx.Control.html" title="This is the base class for a control or 'widget'." alt="" coords="77,315,171,344"/> <area shape="rect" id="node4" href="wx.Window.html" title="wx.Window  is the base class for all windows and represents any visible object on screen." alt="" coords="75,237,173,267"/> <area shape="rect" id="node5" href="wx.WindowBase.html" title="wx.WindowBase" alt="" coords="59,160,189,189"/> <area shape="rect" id="node6" href="wx.EvtHandler.html" title="A class that can handle events from the windowing system." alt="" coords="65,83,183,112"/> <area shape="rect" id="node7" href="wx.Object.html" title="This is the root class of many of the wxWidgets classes." alt="" coords="19,5,107,35"/> <area shape="rect" id="node8" href="wx.Trackable.html" title="Add-on base class for a trackable object." alt="" coords="131,5,242,35"/> </map> 
   </p>
   </div>

|


|super_classes| Known Superclasses
==================================

:class:`wx.TreeCtrl`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.inspection.InspectionTree.__init__`                               Initialize self.  See help(type(self)) for accurate signature.
:meth:`~wx.lib.inspection.InspectionTree.BuildTree`                              
:meth:`~wx.lib.inspection.InspectionTree.FindWidgetItem`                         Find the tree item for a widget.
:meth:`~wx.lib.inspection.InspectionTree.GetTextForSizer`                        Returns the string to be used in the tree for a sizer
:meth:`~wx.lib.inspection.InspectionTree.GetTextForWidget`                       Returns the string to be used in the tree for a widget
:meth:`~wx.lib.inspection.InspectionTree.OnSelectionChanged`                     
:meth:`~wx.lib.inspection.InspectionTree.SelectObj`                              
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: InspectionTree(TreeBaseClass)

   All of the widgets in the app, and optionally their sizers, are
   loaded into this tree.

   .. method:: __init__(self, \*args, \*\*kw)

      Initialize self.  See help(type(self)) for accurate signature.


   .. method:: BuildTree(self, startWidget, includeSizers=False, expandFrame=False)


   .. method:: FindWidgetItem(self, widget)

      Find the tree item for a widget.


   .. method:: GetTextForSizer(self, sizer)

      Returns the string to be used in the tree for a sizer


   .. method:: GetTextForWidget(self, widget)

      Returns the string to be used in the tree for a widget


   .. method:: OnSelectionChanged(self, evt)


   .. method:: SelectObj(self, obj)


