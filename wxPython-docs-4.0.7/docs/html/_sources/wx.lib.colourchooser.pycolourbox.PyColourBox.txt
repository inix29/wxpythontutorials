.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2018 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.colourchooser.pycolourbox

.. highlight:: python



.. _wx.lib.colourchooser.pycolourbox.PyColourBox:

==========================================================================================================================================
|phoenix_title|  **wx.lib.colourchooser.pycolourbox.PyColourBox**
==========================================================================================================================================

A Colour Selection Box

The Colour selection box implements button like behavior but contains
a solid-filled, coloured sub-box. Placing the colour in a sub-box allows
for filling in the main panel's background for a high-lighting effect.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>PyColourBox</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.colourchooser.pycolourbox.PyColourBox_inheritance.png" alt="Inheritance diagram of PyColourBox" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.colourchooser.pycolourbox.PyColourBox.html" title="A Colour Selection Box" alt="" coords="5,392,340,421"/> <area shape="rect" id="node2" href="wx.Panel.html" title="A panel is a window on which controls are placed." alt="" coords="132,315,213,344"/> <area shape="rect" id="node3" href="wx.Window.html" title="wx.Window  is the base class for all windows and represents any visible object on screen." alt="" coords="124,237,221,267"/> <area shape="rect" id="node4" href="wx.WindowBase.html" title="wx.WindowBase" alt="" coords="107,160,238,189"/> <area shape="rect" id="node5" href="wx.EvtHandler.html" title="A class that can handle events from the windowing system." alt="" coords="113,83,232,112"/> <area shape="rect" id="node6" href="wx.Object.html" title="This is the root class of many of the wxWidgets classes." alt="" coords="67,5,155,35"/> <area shape="rect" id="node7" href="wx.Trackable.html" title="Add-on base class for a trackable object." alt="" coords="180,5,291,35"/> </map> 
   </p>
   </div>

|


|super_classes| Known Superclasses
==================================

:class:`wx.Panel`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.colourchooser.pycolourbox.PyColourBox.__init__`                   Creates a new colour box instance and initializes the colour
:meth:`~wx.lib.colourchooser.pycolourbox.PyColourBox.GetColour`                  Returns a wxColour object indicating the box's current colour.
:meth:`~wx.lib.colourchooser.pycolourbox.PyColourBox.GetColourBox`               Returns a reference to the internal box object containing the
:meth:`~wx.lib.colourchooser.pycolourbox.PyColourBox.SetColour`                  Accepts a wxColour object and sets the box's current color.
:meth:`~wx.lib.colourchooser.pycolourbox.PyColourBox.SetColourTuple`             Sets the box's current couple to the given tuple.
:meth:`~wx.lib.colourchooser.pycolourbox.PyColourBox.SetHighlight`               Accepts a boolean 'val' toggling the box's highlighting.
:meth:`~wx.lib.colourchooser.pycolourbox.PyColourBox.Update`                     Update()
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: PyColourBox(wx.Panel)

   A Colour Selection Box
   
   The Colour selection box implements button like behavior but contains
   a solid-filled, coloured sub-box. Placing the colour in a sub-box allows
   for filling in the main panel's background for a high-lighting effect.

   .. method:: __init__(self, parent, id, colour=(0, 0, 0), size=(25, 20))

      Creates a new colour box instance and initializes the colour
      content.


   .. method:: GetColour(self)

      Returns a wxColour object indicating the box's current colour.


   .. method:: GetColourBox(self)

      Returns a reference to the internal box object containing the
      color. This function is useful for setting up event handlers for
      the box.


   .. method:: SetColour(self, colour)

      Accepts a wxColour object and sets the box's current color.


   .. method:: SetColourTuple(self, colour)

      Sets the box's current couple to the given tuple.


   .. method:: SetHighlight(self, val)

      Accepts a boolean 'val' toggling the box's highlighting.


   .. method:: Update(self)

      Update()
      
      Calling this method immediately repaints the invalidated area of the
      window and all of its children recursively (this normally only happens
      when the flow of control returns to the event loop).


