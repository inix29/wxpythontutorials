.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2018 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.LogInterposerTemp:

==========================================================================================================================================
|phoenix_title|  **wx.LogInterposerTemp**
==========================================================================================================================================

A special version of :ref:`wx.LogChain`  which uses itself as the new log target.          

It forwards log messages to the previously installed one in addition to processing them itself. Unlike :ref:`wx.LogInterposer`, it doesn't delete the old target which means it can be used to temporarily redirect log output. 

As per :ref:`wx.LogInterposer`, this class must be derived from to implement `Log.DoLog` and/or `Log.DoLogString` methods. 









|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>LogInterposerTemp</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.LogInterposerTemp_inheritance.png" alt="Inheritance diagram of LogInterposerTemp" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.LogInterposerTemp.html" title="A special version of wx.LogChain  which uses itself as the new log target." alt="" coords="5,160,181,189"/> <area shape="rect" id="node2" href="wx.LogChain.html" title="This simple class allows you to chain log sinks, that is to install a new sink but keep passing log messages to the old one instead of replacing it completely as wx.Log.SetActiveTarget   does." alt="" coords="40,83,147,112"/> <area shape="rect" id="node3" href="wx.Log.html" title="wx.Log  class defines the interface for the `log targets`  used by wxWidgets logging functions as explained in the Logging Overview <logging overview>." alt="" coords="57,5,129,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.LogInterposerTemp.__init__`                                           The default constructor installs this object as the current active log target.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.LogInterposerTemp(LogChain)

   **Possible constructors**::

       LogInterposerTemp()
       
   
   A special version of LogChain which uses itself as the new log
   target.



   .. method:: __init__(self)

      The default constructor installs this object as the current active log target.                   




