.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2018 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.dialogs

.. highlight:: python



.. _wx.lib.dialogs.MultiMessageDialog:

==========================================================================================================================================
|phoenix_title|  **wx.lib.dialogs.MultiMessageDialog**
==========================================================================================================================================

A dialog like :class:`wx.MessageDialog`, but with an optional 2nd message string
that is shown in a scrolled window, and also allows passing in the icon to
be shown instead of the stock error, question, etc. icons. The btnLabels
can be used if you'd like to change the stock labels on the buttons, it's
a dictionary mapping stock IDs to label strings.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>MultiMessageDialog</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.dialogs.MultiMessageDialog_inheritance.png" alt="Inheritance diagram of MultiMessageDialog" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.dialogs.MultiMessageDialog.html" title="A dialog like wx.MessageDialog, but with an optional 2nd message string" alt="" coords="5,547,256,576"/> <area shape="rect" id="node2" href="wx.Dialog.html" title="A dialog box is a window with a title bar and sometimes a system menu, which can be moved around the screen." alt="" coords="87,469,175,499"/> <area shape="rect" id="node3" href="wx.TopLevelWindow.html" title="wx.TopLevelWindow  is a common base class for wx.Dialog  and wx.Frame." alt="" coords="51,392,210,421"/> <area shape="rect" id="node4" href="wx.NonOwnedWindow.html" title="Common base class for all non-child windows." alt="" coords="45,315,216,344"/> <area shape="rect" id="node5" href="wx.Window.html" title="wx.Window  is the base class for all windows and represents any visible object on screen." alt="" coords="82,237,179,267"/> <area shape="rect" id="node6" href="wx.WindowBase.html" title="wx.WindowBase" alt="" coords="65,160,196,189"/> <area shape="rect" id="node7" href="wx.EvtHandler.html" title="A class that can handle events from the windowing system." alt="" coords="71,83,190,112"/> <area shape="rect" id="node8" href="wx.Object.html" title="This is the root class of many of the wxWidgets classes." alt="" coords="25,5,113,35"/> <area shape="rect" id="node9" href="wx.Trackable.html" title="Add-on base class for a trackable object." alt="" coords="138,5,249,35"/> </map> 
   </p>
   </div>

|


|super_classes| Known Superclasses
==================================

:class:`wx.Dialog`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.dialogs.MultiMessageDialog.__init__`                              Initialize self.  See help(type(self)) for accurate signature.
:meth:`~wx.lib.dialogs.MultiMessageDialog.OnButton`                              
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: MultiMessageDialog(wx.Dialog)

   A dialog like :class:`wx.MessageDialog`, but with an optional 2nd message string
   that is shown in a scrolled window, and also allows passing in the icon to
   be shown instead of the stock error, question, etc. icons. The btnLabels
   can be used if you'd like to change the stock labels on the buttons, it's
   a dictionary mapping stock IDs to label strings.

   .. method:: __init__(self, parent, message, caption = "Message Box", msg2="", style = wx.OK | wx.CANCEL, pos = wx.DefaultPosition, icon=None, btnLabels=None)

      Initialize self.  See help(type(self)) for accurate signature.


   .. method:: OnButton(self, evt)


