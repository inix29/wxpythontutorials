.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2018 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.filebrowsebutton

.. highlight:: python



.. _wx.lib.filebrowsebutton.FileBrowseButton:

==========================================================================================================================================
|phoenix_title|  **wx.lib.filebrowsebutton.FileBrowseButton**
==========================================================================================================================================

A control to allow the user to type in a filename or browse with
the standard file dialog to select file



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>FileBrowseButton</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.filebrowsebutton.FileBrowseButton_inheritance.png" alt="Inheritance diagram of FileBrowseButton" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.filebrowsebutton.FileBrowseButton.html" title="A control to allow the user to type in a filename or browse with" alt="" coords="5,392,304,421"/> <area shape="rect" id="node2" href="wx.Panel.html" title="A panel is a window on which controls are placed." alt="" coords="114,315,195,344"/> <area shape="rect" id="node3" href="wx.Window.html" title="wx.Window  is the base class for all windows and represents any visible object on screen." alt="" coords="106,237,203,267"/> <area shape="rect" id="node4" href="wx.WindowBase.html" title="wx.WindowBase" alt="" coords="89,160,220,189"/> <area shape="rect" id="node5" href="wx.EvtHandler.html" title="A class that can handle events from the windowing system." alt="" coords="95,83,214,112"/> <area shape="rect" id="node6" href="wx.Object.html" title="This is the root class of many of the wxWidgets classes." alt="" coords="49,5,137,35"/> <area shape="rect" id="node7" href="wx.Trackable.html" title="Add-on base class for a trackable object." alt="" coords="162,5,273,35"/> </map> 
   </p>
   </div>

|


|sub_classes| Known Subclasses
==============================

:class:`wx.lib.filebrowsebutton.DirBrowseButton`, :class:`wx.lib.filebrowsebutton.FileBrowseButtonWithHistory`

|


|super_classes| Known Superclasses
==================================

:class:`wx.Panel`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.filebrowsebutton.FileBrowseButton.__init__`                       :param labelText:      Text for label to left of text field
:meth:`~wx.lib.filebrowsebutton.FileBrowseButton.createBrowseButton`             Create the browse-button control
:meth:`~wx.lib.filebrowsebutton.FileBrowseButton.createDialog`                   Setup the graphic representation of the dialog
:meth:`~wx.lib.filebrowsebutton.FileBrowseButton.createLabel`                    Create the label/caption
:meth:`~wx.lib.filebrowsebutton.FileBrowseButton.createTextControl`              Create the text control
:meth:`~wx.lib.filebrowsebutton.FileBrowseButton.GetLabel`                       Retrieve the label's current text
:meth:`~wx.lib.filebrowsebutton.FileBrowseButton.GetValue`                       retrieve current value of text control
:meth:`~wx.lib.filebrowsebutton.FileBrowseButton.OnBrowse`                       Going to browse for file...
:meth:`~wx.lib.filebrowsebutton.FileBrowseButton.OnChanged`                      
:meth:`~wx.lib.filebrowsebutton.FileBrowseButton.SetBackgroundColour`            SetBackgroundColour(colour) -> bool
:meth:`~wx.lib.filebrowsebutton.FileBrowseButton.SetLabel`                       Set the label's current text
:meth:`~wx.lib.filebrowsebutton.FileBrowseButton.SetValue`                       set current value of text control
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: FileBrowseButton(wx.Panel)

   A control to allow the user to type in a filename or browse with
   the standard file dialog to select file

   .. method:: __init__ (self, parent, id= -1, pos = wx.DefaultPosition, size = wx.DefaultSize, style = wx.TAB_TRAVERSAL, labelText= "File Entry:", buttonText= "Browse", toolTip= "Type filename or click browse to choose file",  dialogTitle = "Choose a file", startDirectory = ".", initialValue = "", fileMask = "\*.\*", fileMode = wx.FD_OPEN,  changeCallback= lambda x:x, labelWidth = 0, name = 'fileBrowseButton', )

      :param labelText:      Text for label to left of text field
      :param buttonText:     Text for button which launches the file dialog
      :param toolTip:        Help text
      :param dialogTitle:    Title used in file dialog
      :param startDirectory: Default directory for file dialog startup
      :param fileMask:       File mask (glob pattern, such as *.*) to use in file dialog
      :param fileMode:       wx.FD_OPEN or wx.FD_SAVE, indicates type of file dialog to use
      :param changeCallback: Optional callback called for all changes in value of the control
      :param labelWidth:     Width of the label


   .. method:: createBrowseButton( self)

      Create the browse-button control


   .. method:: createDialog( self, parent, id, pos, size, style, name )

      Setup the graphic representation of the dialog


   .. method:: createLabel( self )

      Create the label/caption


   .. method:: createTextControl( self)

      Create the text control


   .. method:: GetLabel( self )

      Retrieve the label's current text 


   .. method:: GetValue (self)

      retrieve current value of text control


   .. method:: OnBrowse (self, event = None)

      Going to browse for file... 


   .. method:: OnChanged(self, evt)


   .. method:: SetBackgroundColour(self,color)

      SetBackgroundColour(colour) -> bool
      
      Sets the background colour of the window.


   .. method:: SetLabel( self, value )

      Set the label's current text 


   .. method:: SetValue (self, value, callBack=1)

      set current value of text control


