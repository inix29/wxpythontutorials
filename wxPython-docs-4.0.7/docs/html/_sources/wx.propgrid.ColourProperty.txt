.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2018 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.propgrid.ColourProperty:

==========================================================================================================================================
|phoenix_title|  **wx.propgrid.ColourProperty**
==========================================================================================================================================





|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>ColourProperty</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.propgrid.ColourProperty_inheritance.png" alt="Inheritance diagram of ColourProperty" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.propgrid.ColourProperty.html" title="wx.propgrid.ColourProperty" alt="" coords="30,315,237,344"/> <area shape="rect" id="node2" href="wx.propgrid.SystemColourProperty.html" title="Has dropdown list of wxWidgets system colours." alt="" coords="5,237,261,267"/> <area shape="rect" id="node3" href="wx.propgrid.EnumProperty.html" title="You can derive custom properties with choices from this class." alt="" coords="33,160,234,189"/> <area shape="rect" id="node4" href="wx.propgrid.PGProperty.html" title="wx.propgrid.PGProperty  is base class for all wx.propgrid.PropertyGrid  properties." alt="" coords="43,83,224,112"/> <area shape="rect" id="node5" href="wx.Object.html" title="This is the root class of many of the wxWidgets classes." alt="" coords="89,5,177,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.propgrid.ColourProperty.__init__`                                     
:meth:`~wx.propgrid.ColourProperty.GetColour`                                    Default is to use `SystemSettings.GetColour(index).`
:meth:`~wx.propgrid.ColourProperty.ValueToString`                                Converts property value into a text representation.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.propgrid.ColourProperty(SystemColourProperty)

   **Possible constructors**::

       ColourProperty(label=PG_LABEL, name=PG_LABEL, value=WHITE)
       



   .. method:: __init__(self, label=PG_LABEL, name=PG_LABEL, value=WHITE)




      :param `label`: 
      :type `label`: string
      :param `name`: 
      :type `name`: string
      :param `value`: 
      :type `value`: wx.Colour







   .. method:: GetColour(self, index)

      Default is to use `SystemSettings.GetColour(index).`                  

      Override to use custom colour tables etc.                  


      :param `index`: 
      :type `index`: int




      :rtype: `Colour`     








   .. method:: ValueToString(self, value, argFlags=0)

      Converts property value into a text representation.                  




      :param `value`: Value to be converted.   
      :type `value`: PGVariant
      :param `argFlags`: If 0 (default value), then displayed string is returned. If ``wx.propgrid.PG_FULL_VALUE`` is set, returns complete, storable string value instead of displayable. If ``wx.propgrid.PG_EDITABLE_VALUE`` is set, returns string value that must be editable in textctrl. If ``wx.propgrid.PG_COMPOSITE_FRAGMENT`` is set, returns text that is appropriate to display as a part of string property's composite text representation.  
      :type `argFlags`: int








      :rtype: `string`



                  



      .. note:: 

         Default implementation calls :meth:`GenerateComposedValue` .   







