.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2018 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.filebrowsebutton

.. highlight:: python



.. _wx.lib.filebrowsebutton.FileBrowseButtonWithHistory:

==========================================================================================================================================
|phoenix_title|  **wx.lib.filebrowsebutton.FileBrowseButtonWithHistory**
==========================================================================================================================================

with following additions:
    __init__(..., history=None)

        history -- optional list of paths for initial history drop-down
            (must be passed by name, not a positional argument)
            If history is callable it will must return a list used
            for the history drop-down

        changeCallback -- as for FileBrowseButton, but with a work-around
            for win32 systems which don't appear to create wx.EVT_COMBOBOX
            events properly.  There is a (slight) chance that this work-around
            will cause some systems to create two events for each Combobox
            selection. If you discover this condition, please report it!

        As for a FileBrowseButton.__init__ otherwise.

    GetHistoryControl()
        Return reference to the control which implements interfaces
        required for manipulating the history list.  See GetHistoryControl
        documentation for description of what that interface is.

    GetHistory()
        Return current history list

    SetHistory( value=(), selectionIndex = None )
        Set current history list, if selectionIndex is not None, select that index

    



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>FileBrowseButtonWithHistory</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.filebrowsebutton.FileBrowseButtonWithHistory_inheritance.png" alt="Inheritance diagram of FileBrowseButtonWithHistory" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.filebrowsebutton.FileBrowseButtonWithHistory.html" title="with following additions:" alt="" coords="5,469,381,499"/> <area shape="rect" id="node2" href="wx.lib.filebrowsebutton.FileBrowseButton.html" title="A control to allow the user to type in a filename or browse with" alt="" coords="44,392,343,421"/> <area shape="rect" id="node3" href="wx.Panel.html" title="A panel is a window on which controls are placed." alt="" coords="153,315,234,344"/> <area shape="rect" id="node4" href="wx.Window.html" title="wx.Window  is the base class for all windows and represents any visible object on screen." alt="" coords="145,237,242,267"/> <area shape="rect" id="node5" href="wx.WindowBase.html" title="wx.WindowBase" alt="" coords="128,160,259,189"/> <area shape="rect" id="node6" href="wx.EvtHandler.html" title="A class that can handle events from the windowing system." alt="" coords="134,83,253,112"/> <area shape="rect" id="node7" href="wx.Object.html" title="This is the root class of many of the wxWidgets classes." alt="" coords="88,5,176,35"/> <area shape="rect" id="node8" href="wx.Trackable.html" title="Add-on base class for a trackable object." alt="" coords="201,5,311,35"/> </map> 
   </p>
   </div>

|


|super_classes| Known Superclasses
==================================

:class:`wx.lib.filebrowsebutton.FileBrowseButton`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.filebrowsebutton.FileBrowseButtonWithHistory.__init__`            :param labelText:      Text for label to left of text field
:meth:`~wx.lib.filebrowsebutton.FileBrowseButtonWithHistory.createTextControl`   Create the text control
:meth:`~wx.lib.filebrowsebutton.FileBrowseButtonWithHistory.GetHistory`          Return the current history list
:meth:`~wx.lib.filebrowsebutton.FileBrowseButtonWithHistory.GetHistoryControl`   Return a pointer to the control which provides (at least)
:meth:`~wx.lib.filebrowsebutton.FileBrowseButtonWithHistory.OnSetFocus`          When the history scroll is selected, update the history
:meth:`~wx.lib.filebrowsebutton.FileBrowseButtonWithHistory.SetHistory`          Set the current history list
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: FileBrowseButtonWithHistory( FileBrowseButton )

   with following additions:
       __init__(..., history=None)
   
           history -- optional list of paths for initial history drop-down
               (must be passed by name, not a positional argument)
               If history is callable it will must return a list used
               for the history drop-down
   
           changeCallback -- as for FileBrowseButton, but with a work-around
               for win32 systems which don't appear to create wx.EVT_COMBOBOX
               events properly.  There is a (slight) chance that this work-around
               will cause some systems to create two events for each Combobox
               selection. If you discover this condition, please report it!
   
           As for a FileBrowseButton.__init__ otherwise.
   
       GetHistoryControl()
           Return reference to the control which implements interfaces
           required for manipulating the history list.  See GetHistoryControl
           documentation for description of what that interface is.
   
       GetHistory()
           Return current history list
   
       SetHistory( value=(), selectionIndex = None )
           Set current history list, if selectionIndex is not None, select that index
   
       

   .. method:: __init__( self, \*arguments, \*\*namedarguments)

      :param labelText:      Text for label to left of text field
      :param buttonText:     Text for button which launches the file dialog
      :param toolTip:        Help text
      :param dialogTitle:    Title used in file dialog
      :param startDirectory: Default directory for file dialog startup
      :param fileMask:       File mask (glob pattern, such as *.*) to use in file dialog
      :param fileMode:       wx.FD_OPEN or wx.FD_SAVE, indicates type of file dialog to use
      :param changeCallback: Optional callback called for all changes in value of the control
      :param labelWidth:     Width of the label


   .. method:: createTextControl( self)

      Create the text control


   .. method:: GetHistory( self )

      Return the current history list


   .. method:: GetHistoryControl( self )

      Return a pointer to the control which provides (at least)
      the following methods for manipulating the history list:
      
          Append( item ) -- add item
          Clear() -- clear all items
          Delete( index ) -- 0-based index to delete from list
          SetSelection( index ) -- 0-based index to select in list
      
      Semantics of the methods follow those for the wxComboBox control


   .. method:: OnSetFocus(self, event)

      When the history scroll is selected, update the history


   .. method:: SetHistory( self, value=(), selectionIndex = None, control=None )

      Set the current history list


