.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2018 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.agw.genericmessagedialog

.. highlight:: python



.. _wx.lib.agw.genericmessagedialog.StdDialogButtonSizer:

==========================================================================================================================================
|phoenix_title|  **wx.lib.agw.genericmessagedialog.StdDialogButtonSizer**
==========================================================================================================================================

wxWidgets standard dialog button sizer. 



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>StdDialogButtonSizer</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.agw.genericmessagedialog.StdDialogButtonSizer_inheritance.png" alt="Inheritance diagram of StdDialogButtonSizer" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.agw.genericmessagedialog.StdDialogButtonSizer.html" title="wxWidgets standard dialog button sizer." alt="" coords="5,237,399,267"/> <area shape="rect" id="node2" href="wx.BoxSizer.html" title="The basic idea behind a box sizer is that windows will most often be laid out in rather simple basic geometry, typically in a row or a column or several hierarchies of either." alt="" coords="151,160,253,189"/> <area shape="rect" id="node3" href="wx.Sizer.html" title="wx.Sizer  is the abstract base class used for laying out subwindows in a window." alt="" coords="163,83,241,112"/> <area shape="rect" id="node4" href="wx.Object.html" title="This is the root class of many of the wxWidgets classes." alt="" coords="158,5,246,35"/> </map> 
   </p>
   </div>

|


|super_classes| Known Superclasses
==================================

:class:`wx.BoxSizer`

|


|method_summary| Methods Summary
================================

================================================================================== ================================================================================
:meth:`~wx.lib.agw.genericmessagedialog.StdDialogButtonSizer.__init__`             Default class constructor.
:meth:`~wx.lib.agw.genericmessagedialog.StdDialogButtonSizer.AddButton`            Add a button to the sizer.
:meth:`~wx.lib.agw.genericmessagedialog.StdDialogButtonSizer.Realize`              Realizes the sizer depending on the platform.
:meth:`~wx.lib.agw.genericmessagedialog.StdDialogButtonSizer.SetAffirmativeButton` Sets the affirmative button.
:meth:`~wx.lib.agw.genericmessagedialog.StdDialogButtonSizer.SetCancelButton`      Sets the cancel button.
:meth:`~wx.lib.agw.genericmessagedialog.StdDialogButtonSizer.SetNegativeButton`    Sets the negative button.
================================================================================== ================================================================================


|


|api| Class API
===============


.. class:: StdDialogButtonSizer(wx.BoxSizer)

   wxWidgets standard dialog button sizer. 

   .. method:: __init__(self)

      Default class constructor. 


   .. method:: AddButton(self, mybutton)

      Add a button to the sizer.
      
      :param `mybutton`: the button to add.


   .. method:: Realize(self)

      Realizes the sizer depending on the platform. 


   .. method:: SetAffirmativeButton(self, button)

      Sets the affirmative button.
      
      :param `button`: the button to set as affirmative one.


   .. method:: SetCancelButton(self, button)

      Sets the cancel button.
      
      :param `button`: the button to set as cancel one.


   .. method:: SetNegativeButton(self, button)

      Sets the negative button.
      
      :param `button`: the button to set as negative one.


