.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2018 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.gridmovers

.. highlight:: python



.. _wx.lib.gridmovers.GridColMoveEvent:

==========================================================================================================================================
|phoenix_title|  **wx.lib.gridmovers.GridColMoveEvent**
==========================================================================================================================================

PyCommandEvent(eventType=wxEVT_NULL, id=0)

:class:`PyCommandEvent` can be used as a base class for implementing
custom event types in Python. You should derive from this class
instead of :class:`CommandEvent` because this class is Python-aware
and is able to transport its Python bits safely through the
wxWidgets event system and have them still be there when the
event handler is invoked. Note that since :class:`PyCommandEvent` is
taking care of preserving the extra attributes that have been set
then you do not need to override the Clone method in your
derived classes.

.. seealso:: :class:`PyEvent`



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>GridColMoveEvent</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.gridmovers.GridColMoveEvent_inheritance.png" alt="Inheritance diagram of GridColMoveEvent" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.gridmovers.GridColMoveEvent.html" title="PyCommandEvent(eventType=wxEVT_NULL, id=0)" alt="" coords="5,315,273,344"/> <area shape="rect" id="node2" href="wx.PyCommandEvent.html" title="PyCommandEvent can be used as a base class for implementing" alt="" coords="55,237,223,267"/> <area shape="rect" id="node3" href="wx.CommandEvent.html" title="This event class contains information about command events, which originate from a variety of simple controls." alt="" coords="63,160,215,189"/> <area shape="rect" id="node4" href="wx.Event.html" title="An event is a structure holding information about an event passed to a callback or member function." alt="" coords="98,83,181,112"/> <area shape="rect" id="node5" href="wx.Object.html" title="This is the root class of many of the wxWidgets classes." alt="" coords="95,5,183,35"/> </map> 
   </p>
   </div>

|


|super_classes| Known Superclasses
==================================

:class:`wx.PyCommandEvent`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.gridmovers.GridColMoveEvent.__init__`                             Initialize self.  See help(type(self)) for accurate signature.
:meth:`~wx.lib.gridmovers.GridColMoveEvent.GetBeforeColumn`                      
:meth:`~wx.lib.gridmovers.GridColMoveEvent.GetMoveColumn`                        
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: GridColMoveEvent(wx.PyCommandEvent)

   PyCommandEvent(eventType=wxEVT_NULL, id=0)
   
   :class:`PyCommandEvent` can be used as a base class for implementing
   custom event types in Python. You should derive from this class
   instead of :class:`CommandEvent` because this class is Python-aware
   and is able to transport its Python bits safely through the
   wxWidgets event system and have them still be there when the
   event handler is invoked. Note that since :class:`PyCommandEvent` is
   taking care of preserving the extra attributes that have been set
   then you do not need to override the Clone method in your
   derived classes.
   
   .. seealso:: :class:`PyEvent`

   .. method:: __init__(self, id, dCol, bCol)

      Initialize self.  See help(type(self)) for accurate signature.


   .. method:: GetBeforeColumn(self)


   .. method:: GetMoveColumn(self)


