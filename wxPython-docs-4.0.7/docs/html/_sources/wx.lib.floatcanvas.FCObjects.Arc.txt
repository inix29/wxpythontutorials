.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2018 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.floatcanvas.FCObjects

.. highlight:: python



.. _wx.lib.floatcanvas.FCObjects.Arc:

==========================================================================================================================================
|phoenix_title|  **wx.lib.floatcanvas.FCObjects.Arc**
==========================================================================================================================================

Draws an arc of a circle, centered on point ``CenterXY``, from
the first point ``StartXY`` to the second ``EndXY``.

The arc is drawn in an anticlockwise direction from the start point to
the end point.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>Arc</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.floatcanvas.FCObjects.Arc_inheritance.png" alt="Inheritance diagram of Arc" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.floatcanvas.FCObjects.Arc.html" title="Draws an arc of a circle, centered on point ``CenterXY``, from" alt="" coords="386,160,626,189"/> <area shape="rect" id="node2" href="wx.lib.floatcanvas.FCObjects.XYObjectMixin.html" title="This is a mixin class that provides some methods suitable for use" alt="" coords="5,83,319,112"/> <area shape="rect" id="node3" href="wx.lib.floatcanvas.FCObjects.LineAndFillMixin.html" title="Mixin class for objects that have both a line and a fill color and" alt="" coords="343,83,669,112"/> <area shape="rect" id="node4" href="wx.lib.floatcanvas.FCObjects.DrawObject.html" title="This is the base class for all the objects that can be drawn." alt="" coords="693,83,989,112"/> <area shape="rect" id="node5" href="wx.lib.floatcanvas.FCObjects.LineOnlyMixin.html" title="Mixin class for objects that have just a line, rather than a fill" alt="" coords="350,5,662,35"/> </map> 
   </p>
   </div>

|


|super_classes| Known Superclasses
==================================

:class:`wx.lib.floatcanvas.FCObjects.DrawObject`, :class:`wx.lib.floatcanvas.FCObjects.LineAndFillMixin`, :class:`wx.lib.floatcanvas.FCObjects.XYObjectMixin`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.floatcanvas.FCObjects.Arc.__init__`                               Default class constructor.
:meth:`~wx.lib.floatcanvas.FCObjects.Arc.CalcBoundingBox`                        Calculate the bounding box.
:meth:`~wx.lib.floatcanvas.FCObjects.Arc.Move`                                   Move the object by delta
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: Arc(XYObjectMixin, LineAndFillMixin, DrawObject)

   Draws an arc of a circle, centered on point ``CenterXY``, from
   the first point ``StartXY`` to the second ``EndXY``.
   
   The arc is drawn in an anticlockwise direction from the start point to
   the end point.

   .. method:: __init__(self, StartXY, EndXY, CenterXY, LineColor = "Black", LineStyle = "Solid", LineWidth    = 1, FillColor    = None, FillStyle    = "Solid", InForeground = False)

      Default class constructor.
      
      :param `StartXY`: start point, takes a 2-tuple, or a (2,)
       `NumPy <http://www.numpy.org/>`_ array of point coordinates
      :param `EndXY`: end point, takes a 2-tuple, or a (2,)
       `NumPy <http://www.numpy.org/>`_ array of point coordinates
      :param `CenterXY`: center point, takes a 2-tuple, or a (2,)
       `NumPy <http://www.numpy.org/>`_ array of point coordinates
      :param `LineColor`: see :meth:`~lib.floatcanvas.FloatCanvas.DrawObject.SetColor`
      :param `LineStyle`: see :meth:`~lib.floatcanvas.FloatCanvas.DrawObject.SetLineStyle`
      :param `LineWidth`: see :meth:`~lib.floatcanvas.FloatCanvas.DrawObject.SetLineWidth`
      :param `FillColor`: see :meth:`~lib.floatcanvas.FloatCanvas.DrawObject.SetColor`
      :param `FillStyle`: see :meth:`~lib.floatcanvas.FloatCanvas.DrawObject.SetFillStyle`
      :param boolean `InForeground`: should object be in foreground


   .. method:: CalcBoundingBox(self)

      Calculate the bounding box.


   .. method:: Move(self, Delta)

      Move the object by delta
      
      :param `Delta`: delta is a (dx, dy) pair. Ideally a `NumPy <http://www.numpy.org/>`_
       array of shape (2,)


