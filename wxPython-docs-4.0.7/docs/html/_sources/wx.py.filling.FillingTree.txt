.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2018 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.py.filling

.. highlight:: python



.. _wx.py.filling.FillingTree:

==========================================================================================================================================
|phoenix_title|  **wx.py.filling.FillingTree**
==========================================================================================================================================

FillingTree based on TreeCtrl.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>FillingTree</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.py.filling.FillingTree_inheritance.png" alt="Inheritance diagram of FillingTree" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.py.filling.FillingTree.html" title="FillingTree based on TreeCtrl." alt="" coords="23,469,199,499"/> <area shape="rect" id="node2" href="wx.TreeCtrl.html" title="A tree control presents information as a hierarchy, with items that may be expanded to show further items." alt="" coords="61,392,160,421"/> <area shape="rect" id="node3" href="wx.Control.html" title="This is the base class for a control or 'widget'." alt="" coords="64,315,157,344"/> <area shape="rect" id="node4" href="wx.Window.html" title="wx.Window  is the base class for all windows and represents any visible object on screen." alt="" coords="62,237,159,267"/> <area shape="rect" id="node5" href="wx.WindowBase.html" title="wx.WindowBase" alt="" coords="45,160,176,189"/> <area shape="rect" id="node6" href="wx.EvtHandler.html" title="A class that can handle events from the windowing system." alt="" coords="51,83,170,112"/> <area shape="rect" id="node7" href="wx.Object.html" title="This is the root class of many of the wxWidgets classes." alt="" coords="5,5,93,35"/> <area shape="rect" id="node8" href="wx.Trackable.html" title="Add-on base class for a trackable object." alt="" coords="118,5,229,35"/> </map> 
   </p>
   </div>

|


|super_classes| Known Superclasses
==================================

:class:`wx.TreeCtrl`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.py.filling.FillingTree.__init__`                                      Create FillingTree instance.
:meth:`~wx.py.filling.FillingTree.addChildren`                                   
:meth:`~wx.py.filling.FillingTree.display`                                       
:meth:`~wx.py.filling.FillingTree.getFullName`                                   Return a syntactically proper name for item.
:meth:`~wx.py.filling.FillingTree.objGetChildren`                                Return dictionary with attributes or contents of object.
:meth:`~wx.py.filling.FillingTree.objHasChildren`                                Return true if object has children.
:meth:`~wx.py.filling.FillingTree.OnItemActivated`                               Launch a DirFrame.
:meth:`~wx.py.filling.FillingTree.OnItemCollapsed`                               Remove all children from the item.
:meth:`~wx.py.filling.FillingTree.OnItemExpanding`                               Add children to the item.
:meth:`~wx.py.filling.FillingTree.OnSelChanged`                                  Display information about the item.
:meth:`~wx.py.filling.FillingTree.push`                                          Receiver for Interpreter.push signal.
:meth:`~wx.py.filling.FillingTree.setStatusText`                                 Display status information.
:meth:`~wx.py.filling.FillingTree.setText`                                       Display information about the current selection.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: FillingTree(wx.TreeCtrl)

   FillingTree based on TreeCtrl.

   .. method:: __init__(self, parent, id=-1, pos=wx.DefaultPosition, size=wx.DefaultSize, style=wx.TR_DEFAULT_STYLE, rootObject=None, rootLabel=None, rootIsNamespace=False, static=False)

      Create FillingTree instance.


   .. method:: addChildren(self, item)


   .. method:: display(self)


   .. method:: getFullName(self, item, partial='')

      Return a syntactically proper name for item.


   .. method:: objGetChildren(self, obj)

      Return dictionary with attributes or contents of object.


   .. method:: objHasChildren(self, obj)

      Return true if object has children.


   .. method:: OnItemActivated(self, event)

      Launch a DirFrame.


   .. method:: OnItemCollapsed(self, event)

      Remove all children from the item.


   .. method:: OnItemExpanding(self, event)

      Add children to the item.


   .. method:: OnSelChanged(self, event)

      Display information about the item.


   .. method:: push(self, command, more)

      Receiver for Interpreter.push signal.


   .. method:: setStatusText(self, text)

      Display status information.


   .. method:: setText(self, text)

      Display information about the current selection.


