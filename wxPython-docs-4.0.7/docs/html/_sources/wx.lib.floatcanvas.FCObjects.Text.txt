.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2018 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.floatcanvas.FCObjects

.. highlight:: python



.. _wx.lib.floatcanvas.FCObjects.Text:

==========================================================================================================================================
|phoenix_title|  **wx.lib.floatcanvas.FCObjects.Text**
==========================================================================================================================================

Draws a text object

The size is fixed, and does not scale with the drawing.

The hit-test is done on the entire text extent



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>Text</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.floatcanvas.FCObjects.Text_inheritance.png" alt="Inheritance diagram of Text" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.floatcanvas.FCObjects.Text.html" title="Draws a text object" alt="" coords="213,160,461,189"/> <area shape="rect" id="node2" href="wx.lib.floatcanvas.FCObjects.TextObjectMixin.html" title="A mix in class that holds attributes and methods that are needed by" alt="" coords="5,83,332,112"/> <area shape="rect" id="node3" href="wx.lib.floatcanvas.FCObjects.DrawObject.html" title="This is the base class for all the objects that can be drawn." alt="" coords="357,83,653,112"/> <area shape="rect" id="node4" href="wx.lib.floatcanvas.FCObjects.XYObjectMixin.html" title="This is a mixin class that provides some methods suitable for use" alt="" coords="12,5,325,35"/> </map> 
   </p>
   </div>

|


|super_classes| Known Superclasses
==================================

:class:`wx.lib.floatcanvas.FCObjects.DrawObject`, :class:`wx.lib.floatcanvas.FCObjects.TextObjectMixin`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.floatcanvas.FCObjects.Text.__init__`                              Default class constructor.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: Text(TextObjectMixin, DrawObject)

   Draws a text object
   
   The size is fixed, and does not scale with the drawing.
   
   The hit-test is done on the entire text extent

   .. method:: __init__(self, String, xy, Size =  14, Color = "Black", BackgroundColor = None, Family = wx.FONTFAMILY_MODERN, Style = wx.FONTSTYLE_NORMAL, Weight = wx.FONTWEIGHT_NORMAL, Underlined = False, Position = 'tl', InForeground = False, Font = None)

      Default class constructor.
      
      :param string `string`: the text to draw
      :param `XY`: the (x, y) coordinate of the corner of the text, or a 2-tuple,
       or a (2,) `NumPy <http://www.numpy.org/>`_ array
      :param `Size`: the font size
      :param `Color`: see :meth:`~lib.floatcanvas.FloatCanvas.DrawObject.SetColor`
      :param `BackgroundColor`: see :meth:`~lib.floatcanvas.FloatCanvas.DrawObject.SetColor`
      :param wx.FontFamily `Family`: a valid :ref:`wx.FontFamily`
      :param wx.FontStyle `Style`: a valid :ref:`wx.FontStyle`
      :param wx.FontWeight `Weight`: a valid :ref:`wx.FontWeight`
      :param boolean `Underlined`: underline the text
      :param string `Position`: a two character string indicating where in
       relation to the coordinates the box should be oriented
      :param boolean `InForeground`: should object be in foreground
      :param wx.Font `Font`: alternatively you can define :ref:`wx.Font` and the
       above will be ignored.
      
       ============== ==========================
       1st character  Meaning
       ============== ==========================
       ``t``          top
       ``c``          center
       ``b``          bottom
       ============== ==========================
      
       ============== ==========================
       2nd character  Meaning
       ============== ==========================
       ``l``          left
       ``c``          center
       ``r``          right
       ============== ==========================
      
      :param wx.Font `Font`: a valid :class:`wx.Font`
      :param boolean `InForeground`: should object be in foreground


